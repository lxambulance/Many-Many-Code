	# head
	LOD R2,STACK
	LOD R4,0
	STO (R2+4),R4
	STO (R2),EXIT
	LOD R2,R2+8

	# var i

	# i = 1000007
	LOD R5,1000007

	# label main
	LOD R4,STATIC
	STO (R4+0),R5
main:

	# begin

	# var j

	# j = 2
	LOD R5,2

	# label L4
	STO (R2+0),R5
L4:

	# var t0

	# t0 = (j < i)
	LOD R5,(R2+0)
	LOD R4,STATIC
	LOD R6,(R4+0)
	SUB R5,R6
	TST R5
	LOD R3,R1+40
	JLZ R3
	LOD R5,0
	LOD R3,R1+24
	JMP R3
	LOD R5,1

	# ifz t0 goto L5
	STO (R2+4),R5
	TST R5
	JEZ L5

	# var t1

	# t1 = i / j
	LOD R7,(R2+0)
	DIV R6,R7

	# var t2

	# t2 = t1 * j
	STO (R2+8),R6
	MUL R6,R7

	# var t3

	# t3 = (i == t2)
	LOD R4,STATIC
	LOD R8,(R4+0)
	SUB R8,R6
	TST R8
	LOD R3,R1+40
	JEZ R3
	LOD R8,0
	LOD R3,R1+24
	JMP R3
	LOD R8,1

	# ifz t3 goto L3
	STO (R2+12),R6
	STO (R2+16),R8
	TST R8
	JEZ L3

	# actual L1
	LOD R9,L1
	STO (R2+28),R9

	# call PRINTS
	STO (R2+24),R2
	LOD R4,R1+32
	STO (R2+20),R4
	LOD R2,R2+32
	JMP PRINTS

	# actual j
	LOD R5,(R2+0)
	STO (R2+28),R5

	# call PRINTN
	STO (R2+24),R2
	LOD R4,R1+32
	STO (R2+20),R4
	LOD R2,R2+32
	JMP PRINTN

	# actual L2
	LOD R5,L2
	STO (R2+28),R5

	# call PRINTS
	STO (R2+24),R2
	LOD R4,R1+32
	STO (R2+20),R4
	LOD R2,R2+32
	JMP PRINTS

	# label L3
L3:

	# var t4

	# t4 = j + 1
	LOD R5,(R2+0)
	LOD R6,1
	ADD R5,R6

	# j = t4
	STO (R2+20),R5

	# goto L4
	STO (R2+0),R5
	JMP L4

	# label L5
L5:

	# j = 2
	LOD R5,2

	# label L8
	STO (R2+0),R5
L8:

	# var t5

	# t5 = (j < i)
	LOD R5,(R2+0)
	LOD R4,STATIC
	LOD R6,(R4+0)
	SUB R5,R6
	TST R5
	LOD R3,R1+40
	JLZ R3
	LOD R5,0
	LOD R3,R1+24
	JMP R3
	LOD R5,1

	# ifz t5 goto L9
	STO (R2+24),R5
	TST R5
	JEZ L9

	# var t7

	# t7 = i / j
	LOD R7,(R2+0)
	DIV R6,R7

	# var t8

	# t8 = t7 * j
	STO (R2+28),R6
	MUL R6,R7

	# var t9

	# t9 = (i == t8)
	LOD R4,STATIC
	LOD R8,(R4+0)
	SUB R8,R6
	TST R8
	LOD R3,R1+40
	JEZ R3
	LOD R8,0
	LOD R3,R1+24
	JMP R3
	LOD R8,1

	# ifz t9 goto L7
	STO (R2+32),R6
	STO (R2+36),R8
	TST R8
	JEZ L7

	# actual L6
	LOD R9,L6
	STO (R2+48),R9

	# call PRINTS
	STO (R2+44),R2
	LOD R4,R1+32
	STO (R2+40),R4
	LOD R2,R2+52
	JMP PRINTS

	# actual j
	LOD R5,(R2+0)
	STO (R2+48),R5

	# call PRINTN
	STO (R2+44),R2
	LOD R4,R1+32
	STO (R2+40),R4
	LOD R2,R2+52
	JMP PRINTN

	# actual L2
	LOD R5,L2
	STO (R2+48),R5

	# call PRINTS
	STO (R2+44),R2
	LOD R4,R1+32
	STO (R2+40),R4
	LOD R2,R2+52
	JMP PRINTS

	# label L7
L7:

	# var t6

	# t6 = j + 1
	LOD R5,(R2+0)
	LOD R6,1
	ADD R5,R6

	# j = t6
	STO (R2+40),R5

	# goto L8
	STO (R2+0),R5
	JMP L8

	# label L9
L9:

	# end
	LOD R3,(R2-8)
	LOD R2,(R2-4)
	JMP R3

PRINTN:
	LOD R7,(R2-4) # 789
	LOD R15,R7 # 789 
	DIV R7,10 # 78
	TST R7
	JEZ PRINTDIGIT
	LOD R8,R7 # 78
	MUL R8,10 # 780
	SUB R15,R8 # 9
	STO (R2),R15 # local 9 store

	# out 78
	STO (R2+12),R7 # actual 78 push

	# call PRINTN
	STO (R2+8),R2
	LOD R4,R1+32
	STO (R2+4),R4
	LOD R2,R2+16
	JMP PRINTN

	# out 9
	LOD R15,(R2) # local 9 

PRINTDIGIT:
	ADD  R15,48
	OUT

	# ret
	LOD R3,(R2-12)
	LOD R2,(R2-8)
	JMP R3

PRINTS:
	LOD R7,(R2-4)

PRINTC:
	LOD R15,(R7)
	DIV R15,16777216
	TST R15
	JEZ PRINTSEND
	OUT
	ADD R7,1
	JMP PRINTC

PRINTSEND:
	# ret
	LOD R3,(R2-12)
	LOD R2,(R2-8)
	JMP R3

EXIT:
	END

L6:
	DBS 102,111,114,32,0
L2:
	DBS 10,0
L1:
	DBS 119,104,105,108,101,32,0
STATIC:
	DBN 0,4
STACK:
